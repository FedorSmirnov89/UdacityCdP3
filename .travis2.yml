language: node_js
node_js:
  - 13

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - cd ./udagram-api-feed # building the feed image
  - docker --version
  - docker build -t fedor89/feed-image .
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fedor89/feed-image

  - cd ../udagram-api-user # building the users image
  - docker --version
  - docker build -t fedor89/user-image .
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fedor89/user-image

  - cd ../udagram-frontend # building the front image
  - docker --version
  - docker build -t fedor89/front-image .
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fedor89/front-image

  - cd ../reverseProxy # building the reverse proxy image
  - docker --version
  - docker build -t fedor89/reverse-proxy .
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fedor89/reverse-proxy

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push YOUR_DOCKER_HUB/simple-node